{"version":3,"sources":["data/DinnerModel.js","Welcome/Welcome.js","Sidebar/Sidebar.js","Dishes/Dishes.js","SelectDish/SelectDish.js","DishInfo/DishInfo.js","ViewDish/ViewDish.js","Overview/Overview.js","Printout/Printout.js","App.js","index.js"],"names":["httpOptions","headers","X-Mashape-Key","Accept","modelInstance","_this","this","numberOfGuests","localStorage","getItem","parseInt","app_NumberOfGuests","selectedDishes","JSON","parse","app_SelectedDishes","observers","GUESTS","DISH","ERROR_SUFFIX","ERROR_PRICE_OF_DISH","ERROR_ADD_DISH","WEB_ERROR_MESSAGE","setNumberOfGuests","num","isNaN","setItem","notifyObservers","getNumberOfGuests","getSelectedDish","type","dish","dishTypes","getSelectedDishes","getAllIngredients","ingredients","i","length","j","push","getTotalMenuPrice","Math","round","reduce","price","getPriceOfDish","pricePerServing","servings","addDishToMenu","stringify","removeDishFromMenu","id","splice","getAllDishes","arguments","undefined","filter","fetch","then","processResponse","catch","handleError","getDish","response","ok","json","error","console","message","addObserver","observer","removeObserver","obs","condition","forEach","update","resetCache","removeItem","Welcome","react_default","a","createElement","Col","sm","className","Link","to","onClick","Component","Sidebar","props","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","model","assertThisInitialized","componentWillUnmount","onNumberOfGuestsChanged","e","target","value","state","totalMenuPrice","setState","_this2","selectedDishesTable","map","selectedDish","title","xsHidden","Navbar","Header","Toggle","Collapse","onChange","Dishes","newCategory","newFilter","dishes","status","results","baseUri","category","dishesList","key","Panel","Body","src","image","alt","Footer","smOffset","Row","FormGroup","xs","md","lg","FormControl","inputRef","ref","placeholder","componentClass","Button","SelectDish","src_Sidebar_Sidebar","src_Dishes_Dishes","match","params","DishInfo","dishId","returnedDish","priceOfDish","tableHeight","extendedIngredients","loaded","style","height","ingredientsTable","ingredient","amount","unit","name","instructions","colSpan","disabled","ViewDish","src_DishInfo_DishInfo","Overview","dishInfos","smPush","Printout","dishPrepInfo","App","Grid","fluid","Route","exact","path","component","render","src_SelectDish_SelectDish","assign","src_ViewDish_ViewDish","src_Overview_Overview","src_Printout_Printout","ReactDOM","BrowserRouter","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.5722b681.chunk.js","sourcesContent":["const httpOptions = {\n  headers: {\n    'X-Mashape-Key': 'Qu9grxVNWpmshA4Kl9pTwyiJxVGUp1lKzrZjsnghQMkFkfA4LB',\n    'Accept': 'application/json'\n  }\n};\n\nconst DinnerModel = function () {\n  let numberOfGuests = retrieveNumberOfGuestsFromCache();\n  var selectedDishes = retrieveSelectedDishesFromCache();\n  var observers = [];\n\n  // Conditions\n  this.GUESTS = \"guests\";\n  this.DISH = \"dish\";\n\n  // Error messages\n  this.ERROR_SUFFIX = \"Something went wrong...\";\n  this.ERROR_PRICE_OF_DISH = \"Cannot get price of dish.\";\n  this.ERROR_ADD_DISH = \"Cannot add dish to menu.\";\n  this.WEB_ERROR_MESSAGE = \"<div class=\\\"row equal\\\" style=\\\"text-align:center;\\\">Something went wrong, please try again in a few seconds...</div>\";\n\n  // Sets the number of guests.\n  this.setNumberOfGuests = (num) => {\n    if (isNaN(num)) {\n      return;\n    }\n    numberOfGuests = num;\n    localStorage.setItem(\"app_NumberOfGuests\", num);\n    notifyObservers(this.GUESTS);\n  };\n\n  // Retrieve the number of guests.\n  this.getNumberOfGuests = () => numberOfGuests;\n\n  // Returns the dish that is on the menu for selected type\n  this.getSelectedDish = (type) => {\n    for (let dish in selectedDishes) {\n      if (dish.dishTypes[0] === type) {\n        return dish;\n      }\n    }\n  };\n\n  // Returns all the dishes on the menu.\n  this.getSelectedDishes = () => selectedDishes;\n\n  // Returns all ingredients for all the dishes on the menu.\n  this.getAllIngredients = () => {\n    var ingredients = [];\n    for (let i = 0; i < selectedDishes.length; i++) {\n      for (let j = 0; j < selectedDishes[i].ingredients.length; j++) {\n        ingredients.push(selectedDishes[i].ingredients[j]);\n      }\n    }\n    return ingredients;\n  };\n\n  // Returns the total price of the menu (all the ingredients multiplied by\n  // number of guests) rounded to 2 decimal places.\n  this.getTotalMenuPrice = () => Math.round(selectedDishes.reduce((price, dish) => price + this.getPriceOfDish(dish), 0) * 100) / 100;\n\n  // Returns the price of a dish rounded to 2 decimal places.\n  this.getPriceOfDish = (dish) => Math.round(dish.pricePerServing * dish.servings * numberOfGuests * 100) / 100;\n\n  // Adds the passed dish to the menu. If the dish of that type already exists\n  // on the menu it is removed from the menu and the new one added.\n  this.addDishToMenu = (dish) => {\n    selectedDishes.push(dish);\n    localStorage.setItem(\"app_SelectedDishes\", JSON.stringify(selectedDishes));\n    notifyObservers(this.DISH);\n  };\n\n  // Removes dish from menu\n  this.removeDishFromMenu = (id) => {\n    for (let i = 0; i < selectedDishes.length; i++) {\n      if (selectedDishes[i].id === id) {\n        selectedDishes.splice(i, 1);\n        notifyObservers(this.DISH);\n        return;\n      }\n    }\n  };\n\n  // Function that returns all dishes of specific type (i.e. \"starter\", \"main\n  // dish\", \"dessert\"). You can use the filter argument to filter out the dish\n  // by name or ingredient (use for search). If you don't pass any filter all\n  // the dishes will be returned.\n  this.getAllDishes = (type='', filter='') => {\n    const url = 'https://spoonacular-recipe-food-nutrition-v1.p.mashape.com/recipes/search?type=' + type + '&query=' + filter + '&number=16';\n    return fetch(url, httpOptions)\n      .then(processResponse)\n      .catch(handleError);\n  };\n\n  // Function that returns a dish of specific ID\n  this.getDish = (id) => {\n    const url = 'https://spoonacular-recipe-food-nutrition-v1.p.mashape.com/recipes/' + id + '/information';\n    return fetch(url, httpOptions)\n      .then(processResponse)\n      .catch(handleError);\n  };\n\n  // Helper function to process API responses.\n  const processResponse = (response) => {\n    if (response.ok) {\n      return response.json();\n    }\n    throw response;\n  };\n\n  // Helper function to handle errors on failed API calls.\n  const handleError = (error) => {\n    if (error.json) {\n      error.json().then((error) => {\n        console.error('getAllDishes() API Error:', error.message || error);\n      });\n    } else {\n      console.error('getAllDishes() API Error:', error.message || error);\n    }\n  };\n\n  // Add observer to list of observers.\n  this.addObserver = (observer) => observers.push(observer);\n\n  // Find and remove observer from list of observers.\n  this.removeObserver = (observer) => observers = observers.filter(obs => obs !== observer);\n\n  // Notify all observers that they need to be updated.\n  const notifyObservers = (condition) => observers.forEach(obs => obs.update(condition));\n\n  this.resetCache = () => {\n    localStorage.removeItem(\"app_NumberOfGuests\");\n    localStorage.removeItem(\"app_SelectedDishes\");\n    numberOfGuests = 4;\n    selectedDishes = [];\n  };\n\n  function retrieveSelectedDishesFromCache() {\n    if (localStorage.getItem(\"app_SelectedDishes\") === null) {\n      return [];\n    }\n    return JSON.parse(localStorage.app_SelectedDishes);\n  }\n\n  function retrieveNumberOfGuestsFromCache() {\n    if (localStorage.getItem(\"app_NumberOfGuests\") === null) {\n      return 4;\n    }\n    return parseInt(localStorage.app_NumberOfGuests);\n  }\n};\n\nexport const modelInstance = new DinnerModel();\n","import React, {Component} from 'react';\nimport {Col} from 'react-bootstrap';\nimport './Welcome.css';\nimport {Link} from 'react-router-dom';\nimport {modelInstance} from '../data/DinnerModel'\n\nclass Welcome extends Component {\n    render() {\n        return (\n            <Col sm={12} className=\"text-center\">\n                <p className=\"Welcome\">\n                    Find and share everyday cooking inspiration on FireCook. Discover recipes, cooks, videos, and\n                    how-tos based on the food you love and the friends you follow.\n                </p>\n                <Link to=\"/search/main%20course/%20\">\n                    <button className=\"btn btn-primary\" onClick={modelInstance.resetCache()}>Start planning</button>\n                </Link>\n            </Col>\n        );\n    }\n}\n\nexport default Welcome;\n","import React, { Component } from 'react';\nimport { Col, Navbar } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport './Sidebar.css';\n\nclass Sidebar extends Component {\n\n  constructor(props) {\n    super(props);\n\n    // we put on state the properties we want to use and modify in the component\n    this.state = {\n      numberOfGuests: this.props.model.getNumberOfGuests(),\n      selectedDishes: this.props.model.getSelectedDishes(),\n      totalMenuPrice: this.props.model.getTotalMenuPrice()\n    };\n  }\n\n  // this methods is called by React lifecycle when the\n  // component is actually shown to the user (mounted to DOM)\n  // that's a good place to setup model observer\n  componentDidMount = () => this.props.model.addObserver(this);\n\n  // this is called when component is removed from the DOM\n  // good place to remove observer\n  componentWillUnmount = () => this.props.model.removeObserver(this);\n\n  // in our update function we modify the state which will\n  // cause the component to re-render\n  update() {\n    this.setState({\n      numberOfGuests: this.props.model.getNumberOfGuests(),\n      selectedDishes: this.props.model.getSelectedDishes(),\n      totalMenuPrice: this.props.model.getTotalMenuPrice()\n    });\n  }\n\n  // our handler for the input's on change event\n  onNumberOfGuestsChanged = (e) => this.props.model.setNumberOfGuests(+e.target.value);\n\n  // increaseValue() {\n  //   var value = parseInt(document.getElementById('totalNumberOfGuests').value, 10);\n  //   value = isNaN(value) ? 0 : value;\n  //   value++;\n  //   document.getElementById('totalNumberOfGuests').value = value;\n  // }\n  //\n  // decreaseValue() {\n  //   var value = parseInt(document.getElementById('totalNumberOfGuests').value, 10);\n  //   value = isNaN(value) ? 0 : value;\n  //   value < 1 ? value = 1 : '';\n  //   value--;\n  //   document.getElementById('totalNumberOfGuests').value = value;\n  // }\n\n  render() {\n    let selectedDishesTable =\n      this.state.selectedDishes.map((selectedDish) =>\n        <tr>\n          <td>{selectedDish.title}</td>\n          <td>{this.props.model.getPriceOfDish(selectedDish)}</td>\n        </tr>\n      )\n\n    return (\n    <Col sm={3} className=\"FauxContainer\">\n      <Col xsHidden sm={3} className=\"FauxSidebar\"></Col>\n      <Col sm={3} className=\"Sidebar\">\n        <Navbar>\n          <Navbar.Header>\n            <Navbar.Toggle/>\n          </Navbar.Header>\n          <Navbar.Collapse>\n            <Col xsHidden className=\"hiddenPaddingFix\"></Col>\n            <h3>My dinner</h3>\n            <div>\n              People: <input value={this.state.numberOfGuests} onChange={this.onNumberOfGuestsChanged}/>\n              <br/>Total number of guests: {this.state.numberOfGuests}\n            </div>\n            <hr/>\n            <div>\n            <table className=\"sidebarSelected\">\n              <thead>\n                <tr className=\"hide-hr\">\n                  <th>Dish Name</th>\n                  <th>Cost</th>\n                </tr>\n              </thead>\n              <tbody>\n                {selectedDishesTable}\n              </tbody>\n            </table>\n            <div className=\"sidebarTotalCost\">\n              SEK {this.state.totalMenuPrice}\n            </div>\n            </div>\n            <hr/>\n            <center>\n              <Link to=\"/overview\">\n                <button className=\"btn btn-primary\">Confirm dinner</button>\n              </Link>\n            </center>\n          </Navbar.Collapse>\n        </Navbar>\n      </Col>\n    </Col>\n    );\n  }\n}\n\n// <form>\n//   Number of guests:\n//   <div className=\"value-button\" id=\"decrease\" onClick={this.decreaseValue, this.onNumberOfGuestsChanged} value=\"Decrease Value\">-</div>\n//   <input id=\"totalNumberOfGuests\" value={this.state.numberOfGuests} onChange={this.onNumberOfGuestsChanged}/>\n//   <div className=\"value-button\" id=\"increase\" onClick={this.increaseValue, this.onNumberOfGuestsChanged} value=\"Increase Value\">+</div>\n// </form>\n\nexport default Sidebar;\n","import React, {Component} from 'react';\nimport {\n    Col, Row,\n    FormGroup, FormControl, Button,\n    Panel\n} from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport './Dishes.css';\n// Alternative to passing the model as the component property,\n// we can import the model instance directly\nimport {modelInstance} from '../data/DinnerModel';\n\nclass Dishes extends Component {\n  constructor(props) {\n    super(props);\n    // We create the state to store the various statuses\n    // e.g. API data loading or error\n    this.state = {\n      status: 'INITIAL'\n    };\n\n    this.category = '';\n    this.filter = '';\n  }\n\n  // this methods is called by React lifecycle when the\n  // component is actually shown to the user (mounted to DOM)\n  // that's a good place to call the API and get the data\n  componentDidMount = () => this.getAllDishes();\n\n  getAllDishes = (newCategory, newFilter) => {\n    newCategory = newCategory || 'Main course';\n    newFilter = newFilter || '';\n\n    modelInstance.getAllDishes(newCategory, newFilter).then((dishes) => {\n      this.setState({\n        status: 'LOADED',\n        dishes: dishes.results,\n        baseUri: dishes.baseUri\n      });\n    }).catch(() => {\n      this.setState({\n        status: 'ERROR'\n      });\n    });\n  };\n\n  render() {\n    let dishesList = null;\n\n    // Depending on the state we either generate useful message to the user\n    // or show the list of returned dishes.\n    switch (this.state.status) {\n      case 'INITIAL':\n        dishesList = <div className=\"loader\"></div>\n        break;\n      case 'LOADED':\n        dishesList = this.state.dishes.map((dish) =>\n          <Col sm={3} className=\"SearchResultsWrapper\" key={dish.id}>\n            <Link to={\"/dish/\" + dish.id}>\n              <Panel className=\"SearchResults\">\n                <Panel.Body>\n                  <div className=\"crop\">\n                    <img src={this.state.baseUri + dish.image} alt=\"\"/>\n                  </div>\n                </Panel.Body>\n                <Panel.Footer>\n                  {dish.title}\n                </Panel.Footer>\n              </Panel>\n            </Link>\n          </Col>\n        )\n        break;\n      default:\n        dishesList = <b>Failed to load data, please try again.</b>\n        break;\n    }\n\n    return (\n      <Col sm={9} smOffset={3} className=\"Dishes\" key=\"dishSearchKey\">\n        <div className=\"SearchForm\">\n          <h3>Find a dish</h3>\n          <Row>\n            <FormGroup className=\"FormGroup\">\n              <Col xs={12} sm={5} md={4} lg={3} className=\"FormField\">\n                <FormControl id=\"search-keywords\" type=\"text\" inputRef={ref => { this.filter = ref; }} placeholder=\"Enter key words\"/>\n              </Col>\n              <Col xs={12} sm={5} md={4} lg={3} className=\"FormField\">\n                <FormControl id=\"search-category\" inputRef={ref => { this.category = ref; }} componentClass=\"select\">\n                  <option>Main course</option>\n                  <option>Side dish</option>\n                  <option>Dessert</option>\n                  <option>Appetizer</option>\n                  <option>Salad</option>\n                  <option>Bread</option>\n                  <option>Breakfast</option>\n                  <option>Soup</option>\n                  <option>Beverage</option>\n                  <option>Sauce</option>\n                  <option>Drink</option>\n                </FormControl>\n              </Col>\n              <Col xs={12} sm={2} md={4} lg={2} className=\"FormField\">\n                <Button onClick={() => this.getAllDishes(this.category.value, this.filter.value)} type=\"submit\" className=\"btn btn-primary\">Search</Button>\n              </Col>\n            </FormGroup>\n          </Row>\n        </div>\n        <ul>\n          {dishesList}\n        </ul>\n      </Col>\n    );\n  }\n}\n\nexport default Dishes;\n","import React, { Component } from 'react';\nimport { Col } from 'react-bootstrap';\nimport './SelectDish.css';\nimport Sidebar from '../Sidebar/Sidebar';\nimport Dishes from '../Dishes/Dishes';\n\nclass SelectDish extends Component {\n  render() {\n    return (\n      <Col sm={12} className=\"SelectDish\">\n        <Sidebar model={this.props.model}/>\n        <Dishes category={this.props.match.params.category} filter={this.props.match.params.filter}/>\n      </Col>\n    );\n  }\n}\n\nexport default SelectDish;\n","import React, { Component } from 'react';\nimport { Row, Col, Panel } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { modelInstance } from '../data/DinnerModel';\nimport './DishInfo.css';\n\nclass DishInfo extends Component {\n  // Constructor\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: 'INITIAL',\n      numberOfGuests: this.props.model.getNumberOfGuests(),\n      dishId: this.props.dishId,\n      loaded: false     // Used to disable the add dish to menu button until the dish is loaded\n    };\n  }\n\n  // Update the state and re-render the application when data is retrieved.\n  componentDidMount = () => {\n    this.props.model.addObserver(this);\n\n    modelInstance.getDish(this.props.dishId).then((returnedDish) => {\n      this.setState({\n        status: 'LOADED',\n        dish: returnedDish,\n        numberOfGuests: this.props.model.getNumberOfGuests(),\n        priceOfDish: this.props.model.getPriceOfDish(returnedDish),\n        tableHeight: (30 * returnedDish.extendedIngredients.length) + 90,\n        loaded: true\n      });\n    }).catch(() => {\n      this.setState({\n        status: 'ERROR'\n      });\n    });\n  }\n\n  componentWillUnmount = () => this.props.model.removeObserver(this);\n\n  update = () => {\n    let dish = this.state.dish;\n\n    this.setState({\n      numberOfGuests: this.props.model.getNumberOfGuests(),\n      priceOfDish: this.props.model.getPriceOfDish(dish)\n    });\n  };\n\n  addDishToMenu = () => this.props.model.addDishToMenu(this.state.dish);\n\n  render() {\n    let dishesList = null;\n\n    // Depending on the state we either generate useful message to the user\n    // or show the list of returned dishes.\n    switch (this.state.status) {\n      case 'INITIAL':\n        dishesList = <div className=\"loader\"></div>\n        break;\n      case 'LOADED':\n        let style = {\n          height: this.state.tableHeight\n        };\n\n        let ingredientsTable =\n          this.state.dish.extendedIngredients.map((ingredient) =>\n            <tr>\n              <td>{ingredient.amount * this.state.numberOfGuests} {ingredient.unit}</td>\n              <td>{ingredient.name}</td>\n            </tr>\n          )\n\n        dishesList =\n          <Row className=\"DishPanelWrapper\">\n            <Col sm={6} className=\"DishInfoIngredients\">\n              <Panel className=\"DishPanel\">\n                <Panel.Body>\n                    <h3>{this.state.dish.title}</h3>\n                    <img src={this.state.dish.image} alt=\"\"/>\n                    <p className=\"DishInfoDescription\">{this.state.dish.instructions}</p>\n                </Panel.Body>\n              </Panel>\n            </Col>\n            <Col sm={6} className=\"DishInfoIngredients\">\n              <div className=\"notepad\" style={style}>\n                <table className=\"notepad-ingredients\">\n                  <thead>\n                    <tr>\n                      <th colSpan=\"2\">Shopping list...</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {ingredientsTable}\n                  </tbody>\n                </table>\n              </div>\n              <span className=\"notepad-footer\">Ingredients for {this.state.numberOfGuests} people.</span>\n              <span className=\"notepad-footer\"><br/>Total cost will be SEK {this.state.priceOfDish}.</span>\n            </Col>\n          </Row>\n        break;\n      default:\n        dishesList = <b>Failed to load data, please try again.</b>\n        break;\n    }\n\n    return (\n      <Col xs={12} sm={9} smOffset={3} className=\"DishInfo\">\n          <Col sm={12} className=\"DishPanelWrapper\">\n            <Panel className=\"DishPanel\">\n              <Panel.Body>\n                <Link to=\"/search\">\n                  <button className=\"btn btn-primary\">Back To Search</button>\n                </Link>\n                <button className=\"btn btn-success pull-right\" onClick={this.addDishToMenu} disabled={!this.state.loaded}>Add to menu (+)</button>\n              </Panel.Body>\n            </Panel>\n          </Col>\n        {dishesList}\n      </Col>\n    );\n  }\n}\n\nexport default DishInfo;\n","import React, { Component } from 'react';\nimport { Col } from 'react-bootstrap';\nimport './ViewDish.css';\nimport Sidebar from '../Sidebar/Sidebar';\nimport DishInfo from '../DishInfo/DishInfo';\n\nclass ViewDish extends Component {\n  render() {\n    return (\n      <Col sm={12} className=\"ViewDish\">\n        <Sidebar model={this.props.model}/>\n        <DishInfo dishId={this.props.match.params.dishId} model={this.props.model}/>\n      </Col>\n    );\n  }\n}\n\nexport default ViewDish;\n","import React, { Component } from 'react';\nimport { Row, Col, Panel } from 'react-bootstrap';\nimport './Overview.css';\nimport { Link } from 'react-router-dom';\n\nclass Overview extends Component {\n  constructor(props) {\n    super(props);\n\n    // we put on state the properties we want to use and modify in the component\n    this.state = {\n      numberOfGuests: this.props.model.getNumberOfGuests(),\n      totalMenuPrice: this.props.model.getTotalMenuPrice(),\n      selectedDishes: this.props.model.getSelectedDishes()\n    };\n  }\n\n  render() {\n    let dishInfos =\n      this.state.selectedDishes.map((selectedDish) =>\n        <Col sm={4}>\n          <Panel>\n            <Panel.Body>\n              <div className=\"crop\">\n                <img src={selectedDish.image} alt=\"\"/>\n              </div>\n            </Panel.Body>\n            <Panel.Footer>\n              {selectedDish.title}\n            </Panel.Footer>\n            <div className=\"OverviewPrice\">\n              {this.props.model.getPriceOfDish(selectedDish)} SEK\n            </div>\n          </Panel>\n        </Col>\n      )\n\n    return (\n      <Col sm={12} className=\"text-center Overview\">\n        <div className=\"OverviewHeader\">\n          <Link to=\"/search\">\n            <button className=\"btn btn-primary\">Go Back And Edit Dinner</button>\n          </Link>\n        </div>\n\n        <div className=\"container-fluid\">\n          <Col smPush xs={12} sm={4} className=\"text-center\">\n            <div className=\"OverviewSummary\">\n              <h3 className=\"dinnerConfirmText\">Dinner confirmation</h3>\n              <p>Dinner for {this.state.numberOfGuests} people.</p>\n              <p>Total cost will be {this.state.totalMenuPrice} SEK.</p>\n              <Link to=\"/printout\">\n                <button className=\"btn btn-primary\">Print Full Recipe</button>\n              </Link>\n            </div>\n          </Col>\n          <Col xs={12} sm={8}>\n            <Row className=\"results-panel\">\n              {dishInfos}\n            </Row>\n          </Col>\n\n        </div>\n      </Col>\n    );\n  }\n}\n\nexport default Overview;\n","import React, { Component } from 'react';\nimport { Col, Panel } from 'react-bootstrap';\nimport './Printout.css';\nimport { Link } from 'react-router-dom';\n\nclass Printout extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      numberOfGuests: this.props.model.getNumberOfGuests(),\n      selectedDishes: this.props.model.getSelectedDishes()\n    };\n  }\n\n  render() {\n    const DESCRIPTION = \"\\\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit,\\\n        sed do eiusmod tempor incididunt ut labore et dolore\\\n        magna aliqua. Ut enim ad minim veniam, quis nostrud\\\n        exercitation ullamco laboris nisi ut aliquip ex ea\\\n        commodo consequat. Duis aute irure dolor in\\\n        reprehenderit in voluptate velit esse cillum dolore eu\\\n        fugiat nulla pariatur. Excepteur sint occaecat cupidatat\\\n        non proident, sunt in culpa qui officia deserunt mollit\\\n        anim id est laborum.\";\n\n    let dishPrepInfo =\n      this.state.selectedDishes.map((selectedDish) =>\n        <Panel>\n          <Panel.Body>\n            <Col sm={2} className=\"crop\">\n              <img src={selectedDish.image} alt=\"\"/>\n            </Col>\n            <Col sm ={4}>\n              <h3>{selectedDish.title}</h3>\n              <p>{DESCRIPTION}</p>\n            </Col>\n            <Col sm={6}>\n              <h3>Preparation</h3>\n              {selectedDish.instructions}\n            </Col>\n          </Panel.Body>\n        </Panel>\n      )\n\n    return (\n      <Col sm={12} className=\"Printout\">\n        <Panel>\n          <Panel.Body>\n            <Col sm={2}>\n            <Link to=\"/search\">\n              <button className=\"btn btn-primary\">Go Back And Edit Dinner</button>\n            </Link>\n            </Col>\n            <Col sm={10}>\n              <h3 className=\"pull-right\">Dinner for {this.state.numberOfGuests} people</h3>\n            </Col>\n          </Panel.Body>\n        </Panel>\n\n        {dishPrepInfo}\n      </Col>\n    );\n  }\n}\n\nexport default Printout;\n","import React, { Component } from 'react';\nimport { Grid, Row } from 'react-bootstrap';\n// import 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport { Route } from 'react-router-dom';\nimport { modelInstance } from './data/DinnerModel'\nimport Welcome from './Welcome/Welcome';\nimport SelectDish from \"./SelectDish/SelectDish\";\nimport ViewDish from \"./ViewDish/ViewDish\";\nimport Overview from \"./Overview/Overview\";\nimport Printout from \"./Printout/Printout\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: 'Dinner Planner',\n    };\n  }\n\n  render() {\n    return (\n      <Grid fluid>\n        <Row>\n          <div className=\"App-header\">{this.state.title}</div>\n        </Row>\n        <Row>\n          {/* We rended diffrent component based on the path */}\n          <Route exact path=\"/\" component={Welcome}/>\n          <Route path=\"/search/:category?/:filter?\" render={(props) => <SelectDish {...props} model={modelInstance}/>}/>\n          <Route path=\"/dish/:dishId\" render={(props) => <ViewDish {...props} model={modelInstance}/>}/>\n          <Route exact path=\"/overview\" render={() => <Overview model={modelInstance}/>}/>\n          <Route exact path=\"/printout\" render={() => <Printout model={modelInstance}/>}/>\n        </Row>\n      </Grid>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\n\n\nReactDOM.render((\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n), document.getElementById('root'));\n"],"sourceRoot":""}